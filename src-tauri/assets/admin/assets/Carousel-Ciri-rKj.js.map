{"version":3,"file":"Carousel-Ciri-rKj.js","sources":["../../../packages/materials/Functional/Carousel/Carousel.tsx"],"sourcesContent":["import { forwardRef, useImperativeHandle, useState } from 'react';\nimport { ComponentType } from '@materials/types';\nimport { Carousel } from 'antd';\n\nconst MCarousel = ({ config, onAfterChange, onBeforeChange }: ComponentType, ref: any) => {\n  const [visible, setVisible] = useState(true);\n\n  useImperativeHandle(ref, () => ({\n    show() {\n      setVisible(true);\n    },\n    hide() {\n      setVisible(false);\n    },\n  }));\n\n  return (\n    visible && (\n      <div style={config.style}>\n        <Carousel {...config.props} afterChange={onAfterChange} beforeChange={onBeforeChange}>\n          {\n            // 将每个元素包裹在 div 中\n            config.props.imageUrls.map((item: any) => (\n              <div>\n                <img\n                  style={{\n                    height: `${config.props.height || 160}`,\n                    width: `${config.props.width || '100%'}`,\n                  }}\n                  src={item.url}\n                />\n              </div>\n            ))\n          }\n        </Carousel>\n      </div>\n    )\n  );\n};\n\nexport default forwardRef(MCarousel);\n"],"names":["MCarousel","config","onAfterChange","onBeforeChange","ref","visible","setVisible","useState","useImperativeHandle","jsx","Carousel","item","forwardRef"],"mappings":"0KAIA,MAAMA,EAAY,CAAC,CAAE,OAAAC,EAAQ,cAAAC,EAAe,eAAAC,CAAA,EAAiCC,IAAa,CACxF,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EAE3CC,OAAAA,EAAA,oBAAoBJ,EAAK,KAAO,CAC9B,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAAA,CAClB,EACA,EAGAD,GACGI,MAAA,MAAA,CAAI,MAAOR,EAAO,MACjB,SAACQ,EAAA,IAAAC,EAAA,CAAU,GAAGT,EAAO,MAAO,YAAaC,EAAe,aAAcC,EAGlE,WAAO,MAAM,UAAU,IAAKQ,SACzB,MACC,CAAA,SAAAF,EAAA,IAAC,MAAA,CACC,MAAO,CACL,OAAQ,GAAGR,EAAO,MAAM,QAAU,GAAG,GACrC,MAAO,GAAGA,EAAO,MAAM,OAAS,MAAM,EACxC,EACA,IAAKU,EAAK,GAAA,CAAA,EAEd,CACD,CAEL,CAAA,EACF,CAGN,EAEeC,EAAAA,EAAAA,WAAWZ,CAAS"}