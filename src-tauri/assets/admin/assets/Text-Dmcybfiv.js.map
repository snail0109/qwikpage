{"version":3,"file":"Text-Dmcybfiv.js","sources":["../../../packages/materials/Basic/Text/Text.tsx"],"sourcesContent":["/*\n * @Author: zq\n * @Description: 文件说明\n * @LastEditors: zq\n * @Company: 沃尔玛\n * @Date: 2024-12-05 12:43:19\n * @LastEditTime: 2024-12-05 12:44:05\n * @FilePath: /lowcode-web/packages/materials/Basic/Text/Text.tsx\n */\nimport { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { Typography } from 'antd';\nimport dayjs from 'dayjs';\nimport { ComponentType } from '@materials/types';\nimport { formatNumber } from '@materials/utils/util';\nimport { message } from '@materials/utils/AntdGlobal';\nimport { omit } from 'lodash-es';\n/**\n *\n * @param props 组件本身属性\n * @param style 组件样式\n * @returns\n */\nconst MText = ({ config, onClick }: ComponentType, ref: any) => {\n  const [text, setText] = useState('');\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    const originText = config.props?.text?.toString() || '';\n    const format = config.props?.format;\n    const script = config.props?.script;\n    let value: string | number = originText;\n    if (format === 'YYYY-MM-DD HH:mm:ss') {\n      value = dayjs(originText).format(format);\n    } else if (format === 'YYYY-MM-DD') {\n      value = dayjs(originText).format(format);\n    } else if (format === 'HH:mm:ss') {\n      value = dayjs(originText).format(format);\n    } else if (format === 'money') {\n      value = formatNumber(originText, 'currency');\n    } else if (format === 'number') {\n      value = formatNumber(originText, 'decimal');\n    } else if (format === 'percent') {\n      value = formatNumber(originText, 'percent');\n    }\n\n    if (script) {\n      try {\n        const renderFn = new Function('value', `return (${script})(value);`);\n        value = renderFn(value);\n      } catch (error) {\n        console.error(`脚本解析失败`, error);\n        message.error(JSON.stringify(error));\n      }\n    }\n    setText(value?.toString());\n  }, [config.props.text]);\n\n  // 对外暴露方法\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n    };\n  });\n  const handleClick = () => {\n    onClick?.();\n  };\n  return (\n    visible && (\n      <Typography.Text style={config.style} {...omit(config.props, ['script', 'text'])} onClick={handleClick}>\n        {text}\n      </Typography.Text>\n    )\n  );\n};\nexport default forwardRef(MText);\n"],"names":["MText","config","onClick","ref","text","setText","useState","visible","setVisible","useEffect","originText","_b","_a","format","_c","script","_d","value","dayjs","formatNumber","error","message","useImperativeHandle","handleClick","jsx","Typography","omit","forwardRef"],"mappings":"sMAsBA,MAAMA,EAAQ,CAAC,CAAE,OAAAC,EAAQ,QAAAC,CAAA,EAA0BC,IAAa,CAC9D,KAAM,CAACC,EAAMC,CAAO,EAAIC,EAAAA,SAAS,EAAE,EAC7B,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EAC3CG,EAAAA,UAAU,IAAM,aACd,MAAMC,IAAaC,GAAAC,EAAAX,EAAO,QAAP,YAAAW,EAAc,OAAd,YAAAD,EAAoB,aAAc,GAC/CE,GAASC,EAAAb,EAAO,QAAP,YAAAa,EAAc,OACvBC,GAASC,EAAAf,EAAO,QAAP,YAAAe,EAAc,OAC7B,IAAIC,EAAyBP,EAe7B,GAdIG,IAAW,sBACbI,EAAQC,EAAMR,CAAU,EAAE,OAAOG,CAAM,EAC9BA,IAAW,aACpBI,EAAQC,EAAMR,CAAU,EAAE,OAAOG,CAAM,EAC9BA,IAAW,WACpBI,EAAQC,EAAMR,CAAU,EAAE,OAAOG,CAAM,EAC9BA,IAAW,QACZI,EAAAE,EAAaT,EAAY,UAAU,EAClCG,IAAW,SACZI,EAAAE,EAAaT,EAAY,SAAS,EACjCG,IAAW,YACZI,EAAAE,EAAaT,EAAY,SAAS,GAGxCK,EACE,GAAA,CAEFE,EADiB,IAAI,SAAS,QAAS,WAAWF,CAAM,WAAW,EAClDE,CAAK,QACfG,EAAO,CACN,QAAA,MAAM,SAAUA,CAAK,EAC7BC,EAAQ,MAAM,KAAK,UAAUD,CAAK,CAAC,CAAA,CAG/Bf,EAAAY,GAAA,YAAAA,EAAO,UAAU,CACxB,EAAA,CAAChB,EAAO,MAAM,IAAI,CAAC,EAGtBqB,EAAA,oBAAoBnB,EAAK,KAChB,CACL,MAAO,CACLK,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAAA,CAEpB,EACD,EACD,MAAMe,EAAc,IAAM,CACdrB,GAAA,MAAAA,GACZ,EACA,OACEK,GACGiB,EAAA,IAAAC,EAAW,KAAX,CAAgB,MAAOxB,EAAO,MAAQ,GAAGyB,EAAKzB,EAAO,MAAO,CAAC,SAAU,MAAM,CAAC,EAAG,QAASsB,EACxF,SACHnB,EAAA,CAGN,EACeuB,EAAAA,EAAAA,WAAW3B,CAAK"}