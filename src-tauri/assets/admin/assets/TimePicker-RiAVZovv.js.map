{"version":3,"file":"TimePicker-RiAVZovv.js","sources":["../../../packages/materials/FormItems/TimePicker/TimePicker.tsx"],"sourcesContent":["import { ComponentType } from '@materials/types';\nimport { isNull } from '@materials/utils/util';\nimport { Form, FormItemProps, DatePickerProps, FormInstance, TimePicker } from 'antd';\nimport { useEffect, useState, useImperativeHandle, forwardRef } from 'react';\nimport { useFormContext } from '@materials/utils/context';\n\nimport dayjs from 'dayjs';\n\nexport interface IConfig {\n  defaultValue: string;\n  formItem: FormItemProps;\n  formWrap: DatePickerProps;\n}\n/**\n *\n * @param config 组件配置属性值\n * @param props 系统属性值：componentid、componentname等\n * @returns 返回组件\n */\nconst MTimePicker = ({ type, config, onChange }: ComponentType<IConfig> & { form: FormInstance }, ref: any) => {\n  const { initValues } = useFormContext();\n  const [visible, setVisible] = useState(true);\n  const [disabled, setDisabled] = useState(config.props.formWrap.disabled);\n  // 初始化默认值\n  useEffect(() => {\n    const name: string = config.props.formItem?.name;\n    const value = config.props.defaultValue;\n    initValues(type, name, value);\n  }, []);\n\n  // 启用和禁用\n  useEffect(() => {\n    setDisabled(config.props.formWrap.disabled);\n  }, [config.props.formWrap.disabled]);\n\n  // 对外暴露方法\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n      enable() {\n        setDisabled(false);\n      },\n      disable() {\n        setDisabled(true);\n      },\n    };\n  });\n\n  const handleChange = (val: any) => {\n    onChange?.({\n      [config.props.formItem.name]: val.format(config.props.formWrap.format || 'HH:mm:ss'),\n    });\n  };\n  return (\n    visible && (\n      <Form.Item {...config.props.formItem}>\n        <TimePicker\n          {...config.props.formWrap}\n          disabled={disabled}\n          variant={config.props.formWrap.variant || undefined}\n          style={config.style}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    )\n  );\n};\nexport default forwardRef(MTimePicker);\n"],"names":["MTimePicker","type","config","onChange","ref","initValues","useFormContext","visible","setVisible","useState","disabled","setDisabled","useEffect","name","_a","value","useImperativeHandle","handleChange","val","Form","jsx","TimePicker","forwardRef"],"mappings":"wOAmBA,MAAMA,EAAc,CAAC,CAAE,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,CAAA,EAA6DC,IAAa,CACvG,KAAA,CAAE,WAAAC,CAAW,EAAIC,EAAe,EAChC,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAASP,EAAO,MAAM,SAAS,QAAQ,EAEvEU,EAAAA,UAAU,IAAM,OACR,MAAAC,GAAeC,EAAAZ,EAAO,MAAM,WAAb,YAAAY,EAAuB,KACtCC,EAAQb,EAAO,MAAM,aAChBG,EAAAJ,EAAMY,EAAME,CAAK,CAC9B,EAAG,EAAE,EAGLH,EAAAA,UAAU,IAAM,CACFD,EAAAT,EAAO,MAAM,SAAS,QAAQ,GACzC,CAACA,EAAO,MAAM,SAAS,QAAQ,CAAC,EAGnCc,EAAA,oBAAoBZ,EAAK,KAChB,CACL,MAAO,CACLI,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAClB,EACA,QAAS,CACPG,EAAY,EAAK,CACnB,EACA,SAAU,CACRA,EAAY,EAAI,CAAA,CAEpB,EACD,EAEK,MAAAM,EAAgBC,GAAa,CACtBf,GAAA,MAAAA,EAAA,CACT,CAACD,EAAO,MAAM,SAAS,IAAI,EAAGgB,EAAI,OAAOhB,EAAO,MAAM,SAAS,QAAU,UAAU,CAAA,EAEvF,EAEE,OAAAK,SACGY,EAAK,KAAL,CAAW,GAAGjB,EAAO,MAAM,SAC1B,SAAAkB,EAAA,IAACC,EAAA,CACE,GAAGnB,EAAO,MAAM,SACjB,SAAAQ,EACA,QAASR,EAAO,MAAM,SAAS,SAAW,OAC1C,MAAOA,EAAO,MACd,SAAUe,CAAA,CAAA,EAEd,CAGN,EACeK,EAAAA,EAAAA,WAAWtB,CAAW"}