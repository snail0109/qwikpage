{"version":3,"file":"FormList-DuAi40ax.js","sources":["../../../packages/materials/FormItems/FormList/FormList.tsx"],"sourcesContent":["import { forwardRef, useEffect, useImperativeHandle, useState, useContext } from 'react';\nimport { Form, InputProps, Space, Button } from 'antd';\nimport { MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Material } from '@materials/MarsRender/MarsRender';\nimport { useFormContext } from '@materials/utils/context';\nimport { ComponentType } from '@materials/types';\n\n/* 泛型只需要定义组件本身用到的属性，当然也可以不定义，默认为any */\nexport interface IConfig {\n  defaultValue: string;\n  formItem: {\n    name: string;\n    direction: 'horizontal' | 'vertical';\n  };\n  formWrap: InputProps;\n}\n/**\n *\n * @param config 组件配置属性值\n * @param props 系统属性值：componentid、componentname等\n * @returns 返回组件\n */\nconst MFormList = ({ type, config, elements }: ComponentType<IConfig>, ref: any) => {\n  const [visible, setVisible] = useState(true);\n  const { initValues } = useFormContext();\n  // 初始化默认值\n  useEffect(() => {\n    initValues(type, config.props.formItem.name, [{}]);\n  }, []);\n\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n    };\n  });\n  return (\n    visible && (\n      <div style={config.style}>\n        <Form.List {...config.props.formItem}>\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name, ...restField }) => (\n                <Space key={key} style={{ display: 'flex', width: '100%', marginBottom: 8, padding: '0 10px' }} align=\"baseline\">\n                  <Space key={key} align=\"baseline\" direction={config.props.formItem.direction}>\n                    {elements?.length ? elements?.map((child) => <Material key={child.id} item={{ ...child, name }} />) : null}\n                  </Space>\n                  <PlusOutlined onClick={() => add({ title: '-', dataIndex: name + 1 }, name + 1)} />\n                  <MinusOutlined onClick={() => remove(name)} />\n                </Space>\n              ))}\n              <Form.Item>\n                <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\n                  新增一条\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </div>\n    )\n  );\n};\n\nexport default forwardRef(MFormList);\n"],"names":["MFormList","type","config","elements","ref","visible","setVisible","useState","initValues","useFormContext","useEffect","useImperativeHandle","jsx","Form","fields","add","remove","jsxs","Fragment","key","name","restField","Space","child","Material","PlusOutlined","MinusOutlined","Button","forwardRef"],"mappings":"kTAsBA,MAAMA,EAAY,CAAC,CAAE,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,CAAA,EAAoCC,IAAa,CAClF,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAAE,WAAAC,CAAW,EAAIC,EAAe,EAEtCC,OAAAA,EAAAA,UAAU,IAAM,CACHF,EAAAP,EAAMC,EAAO,MAAM,SAAS,KAAM,CAAC,CAAA,CAAE,CAAC,CACnD,EAAG,EAAE,EAELS,EAAA,oBAAoBP,EAAK,KAChB,CACL,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAAA,CAEpB,EACD,EAECD,SACG,MAAI,CAAA,MAAOH,EAAO,MACjB,SAAAU,MAACC,EAAK,KAAL,CAAW,GAAGX,EAAO,MAAM,SACzB,SAAC,CAAAY,EAAQ,CAAE,IAAAC,EAAK,OAAAC,KAEZC,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAAOJ,EAAA,IAAI,CAAC,CAAE,IAAAK,EAAK,KAAAC,EAAM,GAAGC,CAAA,IAC3BJ,EAAA,KAACK,EAAgB,CAAA,MAAO,CAAE,QAAS,OAAQ,MAAO,OAAQ,aAAc,EAAG,QAAS,UAAY,MAAM,WACpG,SAAA,CAACV,EAAAA,IAAAU,EAAA,CAAgB,MAAM,WAAW,UAAWpB,EAAO,MAAM,SAAS,UAChE,SAAAC,GAAA,MAAAA,EAAU,OAASA,GAAA,YAAAA,EAAU,IAAKoB,GAAUX,EAAAA,IAACY,EAAwB,CAAA,KAAM,CAAE,GAAGD,EAAO,KAAAH,CAAA,CAA5B,EAAAG,EAAM,EAA8B,GAAM,IAAA,EAD5FJ,CAEZ,EACCP,EAAAA,IAAAa,EAAA,CAAa,QAAS,IAAMV,EAAI,CAAE,MAAO,IAAK,UAAWK,EAAO,CAAA,EAAKA,EAAO,CAAC,CAAG,CAAA,QAChFM,EAAc,CAAA,QAAS,IAAMV,EAAOI,CAAI,CAAG,CAAA,CAAA,CAAA,EALlCD,CAMZ,CACD,QACAN,EAAK,KAAL,CACC,SAACD,MAAAe,EAAA,CAAO,KAAK,SAAS,QAAS,IAAMZ,EAAI,EAAG,MAAK,GAAC,WAAOU,EAAa,CAAA,CAAA,EAAI,gBAE1E,CACF,CAAA,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,CAGN,EAEeG,EAAAA,EAAAA,WAAW5B,CAAS"}