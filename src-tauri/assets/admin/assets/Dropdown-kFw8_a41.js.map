{"version":3,"file":"Dropdown-kFw8_a41.js","sources":["../../../packages/materials/Functional/Dropdown/Dropdown.tsx"],"sourcesContent":["import { ComponentType } from '@materials/types';\nimport { forwardRef, useImperativeHandle, useState, useMemo, memo } from 'react';\nimport { Dropdown, MenuProps } from 'antd';\nimport * as icons from '@ant-design/icons';\n\n/*泛型只需要定义组件本身用到的属性*/\nexport interface IConfig {\n  text: string;\n  type: 'primary' | 'dashed' | 'link' | 'text' | 'default' | undefined;\n  placement: 'bottom' | 'bottomLeft' | 'bottomRight' | 'top' | 'topLeft' | 'topRight' | undefined;\n  itemConfig: any[];\n}\n\ntype MDropdownRef = {\n  show: () => void;\n  hide: () => void;\n  enable: () => void;\n  disable: () => void;\n};\n\nconst MDropdown = forwardRef<MDropdownRef, ComponentType<IConfig>>(({ config, onMenuClick }, ref) => {\n  const [visible, setVisible] = useState(true);\n  const [disabled, setDisabled] = useState(false);\n\n  useImperativeHandle(ref, () => ({\n    show() {\n      setVisible(true);\n    },\n    hide() {\n      setVisible(false);\n    },\n    enable() {\n      setDisabled(false);\n    },\n    disable() {\n      setDisabled(true);\n    },\n  }));\n\n  const items = useMemo(() => {\n    const iconsList: { [key: string]: any } = icons;\n    return config.props.itemConfig.map((item: any) => ({ ...item, icon: item.icon && iconsList[item.icon].render() }));\n  }, [config.props.itemConfig]);\n\n  const handleMenuClick: MenuProps['onClick'] = ({ key }) =>\n    onMenuClick?.({\n      ['key']: key,\n    });\n\n  if (!visible) {\n    return null;\n  }\n\n  const { itemConfig, ...rest } = config.props;\n\n  return (\n    <Dropdown.Button\n      style={config.style}\n      disabled={disabled}\n      {...rest}\n      menu={{\n        items,\n        onClick: handleMenuClick,\n      }}\n    >\n      {config.props.text || ''}\n    </Dropdown.Button>\n  );\n});\nexport default memo(MDropdown);\n"],"names":["MDropdown","forwardRef","config","onMenuClick","ref","visible","setVisible","useState","disabled","setDisabled","useImperativeHandle","items","useMemo","iconsList","icons","item","handleMenuClick","key","itemConfig","rest","jsx","Dropdown","memo"],"mappings":"0RAoBA,MAAMA,EAAYC,EAAiD,WAAA,CAAC,CAAE,OAAAC,EAAQ,YAAAC,CAAA,EAAeC,IAAQ,CACnG,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,EAAK,EAE9CG,EAAA,oBAAoBN,EAAK,KAAO,CAC9B,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAClB,EACA,QAAS,CACPG,EAAY,EAAK,CACnB,EACA,SAAU,CACRA,EAAY,EAAI,CAAA,CAClB,EACA,EAEI,MAAAE,EAAQC,EAAAA,QAAQ,IAAM,CAC1B,MAAMC,EAAoCC,EAC1C,OAAOZ,EAAO,MAAM,WAAW,IAAKa,IAAe,CAAE,GAAGA,EAAM,KAAMA,EAAK,MAAQF,EAAUE,EAAK,IAAI,EAAE,UAAW,CAChH,EAAA,CAACb,EAAO,MAAM,UAAU,CAAC,EAEtBc,EAAwC,CAAC,CAAE,IAAAC,CAAA,IAC/Cd,GAAA,YAAAA,EAAc,CACX,IAAQc,CAAA,GAGb,GAAI,CAACZ,EACI,OAAA,KAGT,KAAM,CAAE,WAAAa,EAAY,GAAGC,GAASjB,EAAO,MAGrC,OAAAkB,EAAA,IAACC,EAAS,OAAT,CACC,MAAOnB,EAAO,MACd,SAAAM,EACC,GAAGW,EACJ,KAAM,CACJ,MAAAR,EACA,QAASK,CACX,EAEC,SAAAd,EAAO,MAAM,MAAQ,EAAA,CACxB,CAEJ,CAAC,EACcoB,EAAAA,EAAAA,KAAKtB,CAAS"}