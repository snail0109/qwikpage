{"version":3,"file":"Rate-BnordscW.js","sources":["../../../packages/materials/FormItems/Rate/Rate.tsx"],"sourcesContent":["import { ComponentType } from '@materials/types';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Form, FormItemProps, Rate, RateProps } from 'antd';\nimport { useFormContext } from '@materials/utils/context';\nimport * as icons from '@ant-design/icons';\n\n/* 泛型只需要定义组件本身用到的属性，当然也可以不定义，默认为any */\nexport interface IConfig {\n  defaultValue: string;\n  formItem: FormItemProps;\n  formWrap: RateProps;\n}\n\ntype MRateRef = {\n  show: () => void;\n  hide: () => void;\n  enable: () => void;\n  disable: () => void;\n};\n\nconst MRate = forwardRef<MRateRef, ComponentType<IConfig>>(({ type, config, onChange, onHoverChange }, ref) => {\n  const [visible, setVisible] = useState(true);\n  const [disabled, setDisabled] = useState(false);\n  const [character, setCharacter] = useState();\n  const { initValues } = useFormContext();\n  useImperativeHandle(ref, () => ({\n    show() {\n      setVisible(true);\n    },\n    hide() {\n      setVisible(false);\n    },\n    enable() {\n      setDisabled(false);\n    },\n    disable() {\n      setDisabled(true);\n    },\n  }));\n\n  useEffect(() => {\n    const name: string = config.props.formItem?.name;\n    const value = config.props.defaultValue;\n    initValues(type, name, value);\n  }, [config.props.defaultValue]);\n\n  // 启用和禁用\n  useEffect(() => {\n    setDisabled(config.props.formWrap.disabled || false);\n  }, [config.props.formWrap.disabled]);\n\n  // 获取对应的组件实例\n  useEffect(() => {\n    const iconsList: { [key: string]: any } = icons;\n    setCharacter(iconsList[config.props.formWrap.character as string]?.render());\n  }, [config.props.formWrap.character]);\n\n  // 输入事件\n  const handleChange = (val: number) => {\n    onChange?.({\n      [config.props.formItem.name]: val,\n    });\n  };\n\n  // 鼠标经过时数值变化的回调\n  const handleHoverChange = (val: number) =>\n    onHoverChange?.({\n      [config.props.formItem.name]: val,\n    });\n\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <Form.Item {...config.props.formItem}>\n      <Rate\n        {...config.props.formWrap}\n        disabled={disabled}\n        character={character}\n        style={config.style}\n        onChange={handleChange}\n        onHoverChange={handleHoverChange}\n      />\n    </Form.Item>\n  );\n});\n\nexport default MRate;\n"],"names":["MRate","forwardRef","type","config","onChange","onHoverChange","ref","visible","setVisible","useState","disabled","setDisabled","character","setCharacter","initValues","useFormContext","useImperativeHandle","useEffect","name","_a","value","icons","handleChange","val","handleHoverChange","Form","jsx","Rate"],"mappings":"kVAoBM,MAAAA,EAAQC,EAAAA,WAA6C,CAAC,CAAE,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,EAAU,cAAAC,CAAc,EAAGC,IAAQ,CAC7G,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EACrC,CAACC,EAAUC,CAAW,EAAIF,EAAAA,SAAS,EAAK,EACxC,CAACG,EAAWC,CAAY,EAAIJ,WAAS,EACrC,CAAE,WAAAK,CAAW,EAAIC,EAAe,EACtCC,EAAA,oBAAoBV,EAAK,KAAO,CAC9B,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAClB,EACA,QAAS,CACPG,EAAY,EAAK,CACnB,EACA,SAAU,CACRA,EAAY,EAAI,CAAA,CAClB,EACA,EAEFM,EAAAA,UAAU,IAAM,OACR,MAAAC,GAAeC,EAAAhB,EAAO,MAAM,WAAb,YAAAgB,EAAuB,KACtCC,EAAQjB,EAAO,MAAM,aAChBW,EAAAZ,EAAMgB,EAAME,CAAK,CAC3B,EAAA,CAACjB,EAAO,MAAM,YAAY,CAAC,EAG9Bc,EAAAA,UAAU,IAAM,CACdN,EAAYR,EAAO,MAAM,SAAS,UAAY,EAAK,GAClD,CAACA,EAAO,MAAM,SAAS,QAAQ,CAAC,EAGnCc,EAAAA,UAAU,IAAM,OAEdJ,GAAaM,EAD6BE,EACnBlB,EAAO,MAAM,SAAS,SAAmB,IAAnD,YAAAgB,EAAsD,QAAQ,GAC1E,CAAChB,EAAO,MAAM,SAAS,SAAS,CAAC,EAG9B,MAAAmB,EAAgBC,GAAgB,CACzBnB,GAAA,MAAAA,EAAA,CACT,CAACD,EAAO,MAAM,SAAS,IAAI,EAAGoB,CAAA,EAElC,EAGMC,EAAqBD,GACzBlB,GAAA,YAAAA,EAAgB,CACd,CAACF,EAAO,MAAM,SAAS,IAAI,EAAGoB,CAAA,GAGlC,OAAKhB,QAKFkB,EAAK,KAAL,CAAW,GAAGtB,EAAO,MAAM,SAC1B,SAAAuB,EAAA,IAACC,EAAA,CACE,GAAGxB,EAAO,MAAM,SACjB,SAAAO,EACA,UAAAE,EACA,MAAOT,EAAO,MACd,SAAUmB,EACV,cAAeE,CAAA,CAAA,EAEnB,EAbO,IAeX,CAAC"}