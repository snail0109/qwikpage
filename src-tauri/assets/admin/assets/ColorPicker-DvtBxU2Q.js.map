{"version":3,"file":"ColorPicker-DvtBxU2Q.js","sources":["../../../packages/materials/FormItems/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Form, ColorPicker, ColorPickerProps, FormItemProps } from 'antd';\nimport { ComponentType } from '@materials/types';\nimport { useFormContext } from '@materials/utils/context';\n\n/*泛型只需要定义组件本身用到的属性*/\nexport interface IConfig {\n  defaultValue: string;\n  formItem: FormItemProps;\n  formWrap: ColorPickerProps;\n}\n/**\n *\n * @param props 组件本身属性\n * @param style 组件样式\n * @returns\n */\nconst MColorPicker = ({ type, config, onChange, onChangeComplete }: ComponentType<IConfig>, ref: any) => {\n  const { initValues } = useFormContext();\n  const [disabled, setDisabled] = useState<boolean | undefined>();\n  const [visible, setVisible] = useState(true);\n\n  // 初始化默认值\n  useEffect(() => {\n    const name: string = config.props.formItem?.name;\n    const value = config.props.defaultValue;\n    initValues(type, name, value);\n  }, [config.props.defaultValue]);\n\n  // 启用和禁用\n  useEffect(() => {\n    if (typeof config.props.formWrap.disabled === 'boolean') setDisabled(config.props.formWrap.disabled);\n  }, [config.props.formWrap.disabled]);\n\n  /**\n   * 颜色变化的回调\n   */\n  const handleChange = (val: string) => {\n    onChange?.({\n      [config.props.formItem.name]: val,\n    });\n  };\n\n  /**\n   * 颜色选择完成的回调\n   */\n  const handleChangeComplete = (val: string) => {\n    onChangeComplete?.({\n      [config.props.formItem.name]: val,\n    });\n  };\n\n  // 对外暴露方法\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n      enable() {\n        setDisabled(false);\n      },\n      disable() {\n        setDisabled(true);\n      },\n    };\n  });\n\n  return (\n    visible && (\n      <Form.Item {...config.props.formItem}>\n        <ColorPicker\n          {...config.props.formWrap}\n          disabled={disabled}\n          style={config.style}\n          onChange={(color) => handleChange(color.toCssString())}\n          onChangeComplete={(color) => handleChangeComplete(color.toCssString())}\n        />\n      </Form.Item>\n    )\n  );\n};\nexport default forwardRef(MColorPicker);\n"],"names":["MColorPicker","type","config","onChange","onChangeComplete","ref","initValues","useFormContext","disabled","setDisabled","useState","visible","setVisible","useEffect","name","_a","value","handleChange","val","handleChangeComplete","useImperativeHandle","Form","jsx","ColorPicker","color","forwardRef"],"mappings":"mOAiBA,MAAMA,EAAe,CAAC,CAAE,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,EAAU,iBAAAC,GAA4CC,IAAa,CACjG,KAAA,CAAE,WAAAC,CAAW,EAAIC,EAAe,EAChC,CAACC,EAAUC,CAAW,EAAIC,WAA8B,EACxD,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAI,EAG3CG,EAAAA,UAAU,IAAM,OACR,MAAAC,GAAeC,EAAAb,EAAO,MAAM,WAAb,YAAAa,EAAuB,KACtCC,EAAQd,EAAO,MAAM,aAChBI,EAAAL,EAAMa,EAAME,CAAK,CAC3B,EAAA,CAACd,EAAO,MAAM,YAAY,CAAC,EAG9BW,EAAAA,UAAU,IAAM,CACV,OAAOX,EAAO,MAAM,SAAS,UAAa,WAAuBO,EAAAP,EAAO,MAAM,SAAS,QAAQ,GAClG,CAACA,EAAO,MAAM,SAAS,QAAQ,CAAC,EAK7B,MAAAe,EAAgBC,GAAgB,CACzBf,GAAA,MAAAA,EAAA,CACT,CAACD,EAAO,MAAM,SAAS,IAAI,EAAGgB,CAAA,EAElC,EAKMC,EAAwBD,GAAgB,CACzBd,GAAA,MAAAA,EAAA,CACjB,CAACF,EAAO,MAAM,SAAS,IAAI,EAAGgB,CAAA,EAElC,EAGAE,OAAAA,EAAA,oBAAoBf,EAAK,KAChB,CACL,MAAO,CACLO,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAClB,EACA,QAAS,CACPH,EAAY,EAAK,CACnB,EACA,SAAU,CACRA,EAAY,EAAI,CAAA,CAEpB,EACD,EAGCE,SACGU,EAAK,KAAL,CAAW,GAAGnB,EAAO,MAAM,SAC1B,SAAAoB,EAAA,IAACC,EAAA,CACE,GAAGrB,EAAO,MAAM,SACjB,SAAAM,EACA,MAAON,EAAO,MACd,SAAWsB,GAAUP,EAAaO,EAAM,aAAa,EACrD,iBAAmBA,GAAUL,EAAqBK,EAAM,YAAa,CAAA,CAAA,CAAA,EAEzE,CAGN,EACeC,EAAAA,EAAAA,WAAWzB,CAAY"}