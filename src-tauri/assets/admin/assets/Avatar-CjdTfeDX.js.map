{"version":3,"file":"Avatar-CjdTfeDX.js","sources":["../../../packages/materials/Basic/Avatar/Avatar.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\nimport { Avatar } from 'antd';\nimport { ComponentType } from '@materials/types';\n\nexport type AvatarSize = 'large' | 'small' | 'default' | number;\n\n/*泛型只需要定义组件本身用到的属性*/\nexport interface IConfig {\n  textavatar?: string; // 文字头像\n  /** Shape of avatar, options: `circle`, `square` */\n  shape?: 'circle' | 'square';\n  size?: AvatarSize;\n  gap?: number;\n  /** Src of image avatar */\n  src?: React.ReactNode;\n  /** Srcset of image avatar */\n  srcSet?: string;\n  draggable?: boolean | 'true' | 'false';\n  /** Icon to be used in avatar */\n  icon?: React.ReactNode;\n  children?: React.ReactNode;\n  alt?: string;\n  crossOrigin?: '' | 'anonymous' | 'use-credentials';\n}\n/**\n *\n * @param props 组件本身属性\n * @param style 组件样式\n * @returns\n */\nconst MAvatar = ({ config }: ComponentType<IConfig>, ref: any) => {\n  const [visible, setVisible] = useState(true);\n  // 对外暴露方法\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n    };\n  });\n\n  const { textavatar, size, ...props } = config.props;\n  // 大小转换\n  const avatarSize = useMemo(() => {\n    if (!size) return 'default';\n    if (['large', 'small', 'default'].includes(size?.toString())) return size;\n\n    const str = Number(size.toString().replace('px', ''));\n    return isNaN(Number(str)) ? 'default' : Number(str);\n  }, [size]);\n\n  return (\n    visible && (\n      <Avatar style={config.style} {...props} src={props.src || undefined} size={avatarSize as AvatarSize}>\n        {config.props.textavatar}\n      </Avatar>\n    )\n  );\n};\nexport default forwardRef(MAvatar);\n"],"names":["MAvatar","config","ref","visible","setVisible","useState","useImperativeHandle","textavatar","size","props","avatarSize","useMemo","str","jsx","Avatar","forwardRef"],"mappings":"qKA8BA,MAAMA,EAAU,CAAC,CAAE,OAAAC,GAAkCC,IAAa,CAChE,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EAE3CC,EAAA,oBAAoBJ,EAAK,KAChB,CACL,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAAA,CAEpB,EACD,EAED,KAAM,CAAE,WAAAG,EAAY,KAAAC,EAAM,GAAGC,GAAUR,EAAO,MAExCS,EAAaC,EAAAA,QAAQ,IAAM,CAC3B,GAAA,CAACH,EAAa,MAAA,UACd,GAAA,CAAC,QAAS,QAAS,SAAS,EAAE,SAASA,GAAA,YAAAA,EAAM,UAAU,EAAU,OAAAA,EAE/D,MAAAI,EAAM,OAAOJ,EAAK,WAAW,QAAQ,KAAM,EAAE,CAAC,EACpD,OAAO,MAAM,OAAOI,CAAG,CAAC,EAAI,UAAY,OAAOA,CAAG,CAAA,EACjD,CAACJ,CAAI,CAAC,EAET,OACEL,GACGU,EAAA,IAAAC,EAAA,CAAO,MAAOb,EAAO,MAAQ,GAAGQ,EAAO,IAAKA,EAAM,KAAO,OAAW,KAAMC,EACxE,SAAAT,EAAO,MAAM,WAChB,CAGN,EACec,EAAAA,EAAAA,WAAWf,CAAO"}