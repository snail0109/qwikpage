{"version":3,"file":"List-DOlKm8Oe.js","sources":["../../../packages/materials/Functional/List/List.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { Avatar, Button, List, Tag, ButtonProps } from 'antd';\nimport * as icons from '@ant-design/icons';\nimport { ComponentType } from '@materials/types';\nimport { formatNumber, formatDate } from '@materials/utils/util';\nimport { handleApi } from '@materials/utils/handleApi';\nimport { handleActionFlow } from '@materials/utils/action';\nimport { usePageStore } from '@materials/stores/pageStore';\n\n/*泛型只需要定义组件本身用到的属性*/\nexport interface IConfig {\n  bordered: boolean;\n  size: 'small' | 'default' | 'large';\n  split: boolean;\n  header: string;\n  footer: string;\n  avatar: string;\n  title: {\n    name: string;\n    color: string;\n  };\n  desc: {\n    name: string;\n    color: string;\n  };\n  content: {\n    name: string;\n    color: string;\n    type: string;\n  };\n  bulkActionList: Array<ButtonProps & { eventName: string; icon: string; text: string }>;\n}\n\n/**\n * 列表组件\n * @param props 组件本身属性\n * @param style 组件样式\n * @returns\n */\nconst MList = ({ config }: ComponentType<IConfig>, ref: any) => {\n  const [data, setData] = useState<Array<any>>([]);\n  const [visible, setVisible] = useState(true);\n  const variableData = usePageStore((state) => state.page.pageData.variableData);\n  useEffect(() => {\n    getDataList({});\n  }, [config.api, config.api?.sourceType == 'variable' ? variableData : '']);\n\n  // 列表加载\n  const getDataList = (data: any) => {\n    handleApi(config.api, data).then((res) => {\n      if (res?.code === 0) {\n        if (!Array.isArray(res.data)) {\n          console.error('[List]', 'data数据格式错误，请检查');\n          setData([]);\n        } else {\n          setData(res.data);\n        }\n      }\n    });\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n      update: (data: any) => {\n        // 重新加载表格数据\n        getDataList(data);\n      },\n    };\n  });\n\n  // 处理内容渲染\n  const handleContent = (item: any) => {\n    const content = item[config.props.content?.name];\n    const type = config.props.content.type;\n    if (!content || !type || type === 'text') {\n      return content;\n    }\n    if (type === 'money') return formatNumber(content, 'currency');\n    if (type === 'number') return formatNumber(content);\n    if (type === 'date1') return formatDate(content, 'YYYY-MM-DD');\n    if (type === 'date2') return formatDate(content);\n    if (type === 'tag') {\n      if (Array.isArray(content)) {\n        return content.map((tag, index) => <Tag key={index}>{tag}</Tag>);\n      } else if (typeof content === 'string' || typeof content === 'number') {\n        return <Tag>{content}</Tag>;\n      }\n      return content?.toString();\n    }\n  };\n\n  /**\n   * 操作按钮点击\n   */\n  const handleOperate = (eventName: string, record: any = {}) => {\n    const btnEvent = config.events.find((event) => event.eventName === eventName);\n    handleActionFlow(btnEvent?.actions, record);\n  };\n\n  const iconsList: { [key: string]: any } = icons;\n  return (\n    visible && (\n      <List\n        style={config.style}\n        bordered={config.props.bordered}\n        size={config.props.size}\n        split={config.props.split}\n        header={<div>{config.props.header}</div>}\n        footer={<div>{config.props.footer}</div>}\n        dataSource={data}\n        renderItem={(item: any) => {\n          return (\n            <List.Item\n              actions={\n                config.props.bulkActionList?.map((btn, index) => {\n                  return (\n                    <Button\n                      type={btn.type}\n                      danger={btn.danger}\n                      icon={btn.icon ? React.createElement(iconsList[btn.icon]) : null}\n                      onClick={() => handleOperate(btn.eventName, item)}\n                      key={btn.eventName}\n                    >\n                      {btn.text}\n                    </Button>\n                  );\n                }) || []\n              }\n            >\n              <List.Item.Meta\n                avatar={config.props.avatar ? <Avatar src={item[config.props.avatar]} /> : null}\n                title={config.props.title?.name ? <span style={{ color: config.props.title.color }}>{item[config.props.title.name]}</span> : null}\n                description={config.props.desc.name ? <span style={{ color: config.props.desc.color }}>{item[config.props.desc.name]}</span> : null}\n              />\n              {config.props.content?.name ? <div style={{ color: config.props.content.color }}>{handleContent(item)}</div> : null}\n            </List.Item>\n          );\n        }}\n      />\n    )\n  );\n};\nexport default forwardRef(MList);\n"],"names":["MList","config","ref","data","setData","useState","visible","setVisible","variableData","usePageStore","state","useEffect","getDataList","_a","handleApi","res","useImperativeHandle","handleContent","item","content","type","formatNumber","formatDate","tag","index","jsx","Tag","handleOperate","eventName","record","btnEvent","event","handleActionFlow","iconsList","icons","List","jsxs","btn","Button","React","Avatar","_b","_c","forwardRef"],"mappings":"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"}