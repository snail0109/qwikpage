{"version":3,"file":"Result-DD7uiiL4.js","sources":["../../../packages/materials/FeedBack/Result/Result.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState } from 'react';\nimport { Button, ButtonProps, Result } from 'antd';\nimport * as icons from '@ant-design/icons';\nimport { ComponentType } from '@materials/types';\nimport { handleActionFlow } from '@materials/utils/action';\n\n/*泛型只需要定义组件本身用到的属性*/\nexport interface IConfig {\n  /** 操作区 */\n  extra: React.ReactNode;\n  /** 图标 */\n  icon: React.ReactNode;\n  /** 结果的状态，决定图标和颜色 */\n  status: 'success' | 'error' | 'info' | 'warning' | 404 | 403 | 500;\n  /** subTitle 文字 */\n  subTitle: React.ReactNode;\n  /** title 文字 */\n  title: React.ReactNode;\n  bulkActionList: Array<ButtonProps & { eventName: string; icon: string; text: string }>;\n}\n/**\n *\n * @param props 组件本身属性\n * @param style 组件样式\n * @returns\n */\nconst MResult = ({ config }: ComponentType<IConfig>, ref: any) => {\n  const [visible, setVisible] = useState(true);\n  // 对外暴露方法\n  useImperativeHandle(ref, () => {\n    return {\n      show() {\n        setVisible(true);\n      },\n      hide() {\n        setVisible(false);\n      },\n    };\n  });\n\n  const iconsList: { [key: string]: any } = icons;\n  const bulkActionList = config.props.bulkActionList || [];\n\n  const handleOperate = (eventName: string) => {\n    const btnEvent = config.events.find((event) => event.eventName === eventName);\n    handleActionFlow(btnEvent?.actions, {});\n  };\n\n  return (\n    visible && (\n      <Result\n        style={config.style}\n        {...config.props}\n        icon={config.props.icon ? React.createElement(iconsList[config.props.icon as string]) : undefined}\n        extra={\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 10 }}>\n            {bulkActionList.map((item: any, index: number) => {\n              return (\n                <Button\n                  key={item.eventName}\n                  type={item.type}\n                  danger={item.danger}\n                  icon={item.icon ? React.createElement(iconsList[item.icon]) : null}\n                  onClick={() => handleOperate(item.eventName)}\n                >\n                  {item.text}\n                </Button>\n              );\n            })}\n          </div>\n        }\n      ></Result>\n    )\n  );\n};\nexport default forwardRef(MResult);\n"],"names":["MResult","config","ref","visible","setVisible","useState","useImperativeHandle","iconsList","icons","bulkActionList","handleOperate","eventName","btnEvent","event","handleActionFlow","jsx","Result","React","item","index","Button","forwardRef"],"mappings":"mTA0BA,MAAMA,EAAU,CAAC,CAAE,OAAAC,GAAkCC,IAAa,CAChE,KAAM,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAI,EAE3CC,EAAA,oBAAoBJ,EAAK,KAChB,CACL,MAAO,CACLE,EAAW,EAAI,CACjB,EACA,MAAO,CACLA,EAAW,EAAK,CAAA,CAEpB,EACD,EAED,MAAMG,EAAoCC,EACpCC,EAAiBR,EAAO,MAAM,gBAAkB,CAAC,EAEjDS,EAAiBC,GAAsB,CACrC,MAAAC,EAAWX,EAAO,OAAO,KAAMY,GAAUA,EAAM,YAAcF,CAAS,EAC3DG,EAAAF,GAAA,YAAAA,EAAU,QAAS,EAAE,CACxC,EAEA,OACET,GACEY,EAAA,IAACC,EAAA,CACC,MAAOf,EAAO,MACb,GAAGA,EAAO,MACX,KAAMA,EAAO,MAAM,KAAOgB,EAAM,cAAcV,EAAUN,EAAO,MAAM,IAAc,CAAC,EAAI,OACxF,MACGc,EAAAA,IAAA,MAAA,CAAI,MAAO,CAAE,QAAS,OAAQ,eAAgB,SAAU,WAAY,SAAU,IAAK,IACjF,WAAe,IAAI,CAACG,EAAWC,IAE5BJ,EAAA,IAACK,EAAA,CAEC,KAAMF,EAAK,KACX,OAAQA,EAAK,OACb,KAAMA,EAAK,KAAOD,EAAM,cAAcV,EAAUW,EAAK,IAAI,CAAC,EAAI,KAC9D,QAAS,IAAMR,EAAcQ,EAAK,SAAS,EAE1C,SAAKA,EAAA,IAAA,EANDA,EAAK,SAOZ,CAEH,CACH,CAAA,CAAA,CAEH,CAGP,EACeG,EAAAA,EAAAA,WAAWrB,CAAO"}